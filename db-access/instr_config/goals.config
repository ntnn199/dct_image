# goals.config
# 
# Please see the Labtainer Lab Designer User Guide

# STEVEN
_steven_db1_ = time_during : _steven_mysqldb : admin_change
_steven_db2_ = time_during : _steven_perfdb : admin_change
_steven_db3_ = time_during : _steven_sysdb : admin_change

_steven_jobs_ = time_during : _steven_jobs : admin_change
_steven_depend_ = time_during : _steven_depend : admin_change
_steven_depart_ = time_during : _steven_depart : admin_change
_steven_managerEmps_ = time_during : _steven_managerEmps : admin_change
_steven_create_ = time_during : _steven_create : admin_change
_steven_insert_ = time_during : _steven_insert : admin_change
_steven_update_ = time_during : _steven_update : admin_change
#DOC: Student was able to enforce the company policy for Steven
steven_policy = boolean : (_steven_db1_ and _steven_db2_ and _steven_db3_ and _steven_jobs_ and _steven_depend_ and _steven_depart_ and _steven_managerEmps_ and _steven_create_ and _steven_insert_ and _steven_update_)


# SUSAN
_susan_db1_ = time_during : _susan_mysqldb : admin_change
_susan_db2_ = time_during : _susan_perfdb : admin_change
_susan_db3_ = time_during : _susan_sysdb : admin_change

#checks against the susan.sql script to see if the employee James McNair was created 
_susan_create_emp = time_during : _susan_check1 : admin_change
#checks against the susan.sql script to see if the employee James McNair was deleted
_susan_delete_emp = time_during : _susan_check2 : admin_change
#checks against the susan.sql script to make sure that susan is not able to new deparments into the database 
_susan_depart_insert = time_during : _susan_check3 : admin_change

#DOC: Student was able to enforce the company policy for Susan
susan_policy = boolean : (_susan_db1_ and _susan_db2_ and _susan_db3_ and _susan_create_emp and _susan_delete_emp and _susan_depart_insert)


# NANCY
_nancy_db1_ = time_during : _nancy_mysqldb : admin_change
_nancy_db2_ = time_during : _nancy_perfdb : admin_change
_nancy_db3_ = time_during : _nancy_sysdb : admin_change

_nancy_faviet_ = time_during : _nancy_faviet : admin_change
_nancy_depend_ = time_during : _nancy_depend : admin_change
_nancy_updateEmp_ = time_during : _nancy_updateEmp : admin_change
#DOC: Student was able to enforce the company policy for nancy
nancy_policy = boolean : (_nancy_db1_ and _nancy_db2_ and _nancy_db3_ and _nancy_faviet_ and _nancy_depend_ and _nancy_updateEmp_)


# DAVID
_david_db1_ = time_during : _david_mysqldb : admin_change
_david_db2_ = time_during : _david_perfdb : admin_change
_david_db3_ = time_during : _david_sysdb : admin_change

_david_insert_ = time_not_during : _david_insert : admin_change 
_david_update_ = time_not_during : _david_update : admin_change
_david_min_salary_ = time_during : _david_min : admin_change
_david_max_salary_ = time_during : _david_max : admin_change

_david_employee_ = time_during : _david_employee : admin_change
#DOC: Student was able to enforce the company policy for nancy
david_policy = boolean : (_david_db1_ and _david_db2_ and _david_db3_ and _david_employee_ and _david_insert_ and _david_update_ and _david_min_salary_ and _david_max_salary_)

